class CourseManagement{
    constructor(){
        this.courses=[]
    }

    createCourse(courseId,courseTitle='untitled',courseTerm='2-2565'){
       return this.courses.push({courseId:courseId,courseTitle:courseTitle,courseTerm:courseTerm,registeredStudents:[]})
    }

    registerCourseWithOneStudent(courseId,studentId){
        let index = this.findCourseIndex(courseId)
        if(index===-1) return -1
        return this.courses[index].registeredStudents.push(studentId)
       
    }


    registerCourseWithStudents(courseId,studentId){
        let index = this.findCourseIndex(courseId)
        if(index===-1) return -1
        return this.courses[index].registeredStudents.push(...studentId)
    }


    findCourseIndex(courseId){
       return this.courses.findIndex(course => course.courseId===courseId)
    }

    removeCourse(courseId){
        let courseOld = this.courses.length
        this.courses = this.courses.filter(course => course.courseId!==courseId)
        let courseNew = this.courses.length
        if(courseOld===courseNew) return -1
    }

    getCourses(){
        return this.courses
    }

}
const cm =new CourseManagement()
console.log(cm.createCourse('INT201','Client Side I','1-2565'))
console.log(cm.createCourse('INT203'))
console.log(cm.registerCourseWithOneStudent('INT201',1001))
console.log(cm.registerCourseWithOneStudent('INT203',1001))
console.log(cm.registerCourseWithOneStudent('INT203',1002))
console.log(cm.registerCourseWithOneStudent('INT203',1006))
console.log(cm.registerCourseWithOneStudent('INT202',1002))
console.log(cm.registerCourseWithStudents('INT201',[1003,1005]))
console.log(cm.registerCourseWithStudents('INT202',[1003,1005]))
console.log(cm.removeCourse('INT202'))
console.log(cm.getCourses())
console.log(cm.removeCourse('INT203'))
